项目名称 ：文件上传与下载

功能说明 ：
用户可以上传文件到服务器，其他用户可自由下载

项目分析：
模块：
	os
	socket
	multiprocessing
	QtDesigner
	pyUIc
	pyqt5

服务器功能：
	接收多个用户的请求并实现如下功能
		1.接收到用户的查询请求时，返回指定文件夹下所有文件名的列表
		2.接收到用户的上传请求时，判断是否能上传，若能则接收文件并存储在指定文件夹下
		3.接收到用户的下载请求时，若文件存在则将文件发送给客户端
	1.遇到问题：windons系统不能使用fork实现多进程
	1.解决办法：改为multiprocessing实现多进程，期间出现不能多用户同时登陆，通过增加延迟解决
	    for p in Lp:
            p.start()
        time.sleep(0.1)
        for p in Lp:
            p.join()

客户端功能：
	通过qt实现界面化，发送上传、刷新、下载命令到服务器并返回的结果，将结果显示在界面上或者将文件存储在指定文件夹
	
项目流程：
1.写服务端与客户端
	使用tcp套接字，multiprocessing实现多进程
	客户端发送上传、刷新、下载请求，服务端能实现相应的功能
2.做界面
	通过QtDesigner实现界面布局，有上传、刷新、下载、显示列表等按键
3.按键绑定功能
	将之前客户端写好的各项功能绑定在对应的按键上
	上传、刷新、下载：点击对应按钮启动功能
		self.pushButton.clicked.connect(self.fn)
	将文件列表显示在对应窗口：
		self.textBrowser.append(file)
	打开文件(上传)：
		openfile_name = QFileDialog.getOpenFileName(self)
	打开文件夹(保存路径)：
		openfile_name = QFileDialog.getExistingDirectory()
	
	1.遇到问题：当用户点击上传或者选择路径按钮时，如果点了取消或直接关闭界面，程序会直接崩溃。
	1.解决办法：在上传的连接服务器阶段之前，先做个判断，如果选择了文件才开始连接服务器实现上传，如果没选文件，则啥都不做。至于选择路径功能，则是做了一个全局变量为桌面的默认路径，如果没选路径则默认桌面，选了就修改这个全局变量为选择的路径。
	if l[0][0]: #判断是否选择了文件
		连接服务器

	lujing = 'C:/Users/Administrator/Desktop/' #全局变量
4.本机测试
	在本机测试是否能实现所有功能
5.联机测试
	测试多个用户是否能同时登陆、上传、下载，以及下载大文件是否卡顿。
	1.遇到问题：客户端还是只能登陆一个
	1.解决办法：通过检查发现原因，客户端由于有4个地方需要连接服务器，代码重复多，于是把套接字设置成了全局变量，导致出现问题。后来把每个需要连接服务器的地方都分别设置套接字，每个功能都是一个新的进程。























































